包含头<memory>
思想：new出来的内存存放到智能指针对象中，等智能指针对象过期，在其析构函数中delete该内存

一、auto_ptr:建立所有权概念，针对特定对象，只能有一个智能指针可以拥有它，赋值(或复制构造)操作转移所有权。
	这种机制，在失去所有权后再用失去所用权的对象访问数据，会出现问题

二、unique_ptr(C++11):同auto_ptr,但更严格
	程序试图将一个unique_ptr赋值（或者复制构造）给另一个unique_ptr对象时，只有源对象是右值时，才允许编译。使用了C++11的移动构造函数和右值引用
 	在编译阶段的错误比潜在的程序崩溃更安全。

三、shared_ptr(C++11):跟踪引用特定对象的智能指针数（引用计数），赋值（或复制构造）时，计数加1，过期时计数减1，只有最后一个对象过期时才delete
	在unique_ptr为右值时，可以赋给shared_ptr。
	优先选择shared_ptr。能够更好地支持STL算法
	